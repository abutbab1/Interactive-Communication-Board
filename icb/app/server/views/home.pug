
script(type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js')
link(href='https://unpkg.com/nanogallery2/dist/css/nanogallery2.min.css' rel='stylesheet' type='text/css')
script(type='text/javascript' src='https://unpkg.com/nanogallery2/dist/jquery.nanogallery2.min.js')

link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/github-fork-ribbon-css/0.1.1/gh-fork-ribbon.min.css')
link(rel='stylesheet', href='/css/style.css')
link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css')
link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous")
script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous")
script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous")
script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.2.2/jquery.form.min.js")
link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css")
link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css")
script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js")
script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js")



block content
	- user = typeof(udata) != 'undefined' ? udata : { }
	input(type='hidden', value= user._id)#userId
	head
	meta(name='viewport' content='user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1')
	script(src='https://kit.fontawesome.com/a076d05399.js')
	link(rel='stylesheet' href='https://www.w3schools.com/w3css/4/w3.css')
	link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
	link(href='https://fonts.googleapis.com/css?family=Lato' rel='stylesheet')
	link(rel='stylesheet' type='text/css' href='https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css')

	- var categ = [];

	- for(var i=0;i<categories.length;i++)
		- for(var j=0; j<user.Categories.length;j++)
			- if(user.Categories[j].id == categories[i]._id)
				- if(user.Categories[j].title != undefined)				//  category edited
					- if(user.Categories[j].srct != undefined)
						- if(user.Categories[j].sound != undefined)
							- if(categories[i].albumID != undefined)
								- categ.push({srct: user.Categories[j].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", albumID: categories[i].albumID, customData: {sound: user.Categories[j].sound}})
							- else
								- categ.push({srct: user.Categories[j].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", customData: {sound: user.Categories[j].sound}})
						- else
							- if(categories[i].albumID != undefined)
								- categ.push({srct: user.Categories[j].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", albumID: categories[i].albumID})
							- else
								- categ.push({srct: user.Categories[j].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album" })
					- else
						- if(user.Categories[j].sound != undefined)
							- if(categories[i].albumID != undefined)
								- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", albumID: categories[i].albumID, customData: {sound: user.Categories[j].sound}})
							- else
								- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", customData: {sound: user.Categories[j].sound}})
						- else
							- if(categories[i].albumID != undefined)
								- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album", albumID: categories[i].albumID})
							- else
								- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: user.Categories[j].title, kind: "album"})
				- else
					- if(user.Categories[j].sound != undefined)
						- if(categories[i].albumID != undefined)
							- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: categories[i].title, kind: "album", albumID: categories[i].albumID, customData: {sound: user.Categories[j].sound}})
						- else
							- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: categories[i].title, kind: "album", customData: {sound: user.Categories[j].sound}})
					- else
						- if(categories[i].albumID != undefined)
							- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: categories[i].title, kind: "album", albumID: categories[i].albumID})
						- else
							- categ.push({srct: categories[i].srct, ID: categories[i]._id, title: categories[i].title, kind: "album" })

	- for(var i=0;i<phrases.length;i++)
		- for(var j=0; j<user.Phrases.length;j++)
			- if(user.Phrases[j].id == phrases[i]._id)
				- if(user.Phrases[j].title != undefined)                //  category edited
					- if(user.Phrases[j].srct != undefined)
						- if(user.Phrases[j].sound != undefined)
							- if(phrases[i].albumID != undefined)
								- categ.push({srct: user.Phrases[j].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", albumID: phrases[i].albumID, customData: {sound: user.Phrases[j].sound}})
							- else
								- categ.push({srct: user.Phrases[j].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", customData: {sound: user.Phrases[j].sound}})
						- else
							- if(phrases[i].albumID != undefined)
								- categ.push({srct: user.Phrases[j].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", albumID: phrases[i].albumID})
							- else
								- categ.push({srct: user.Phrases[j].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image" })
					- else
						- if(user.Phrases[j].sound != undefined)
							- if(phrases[i].albumID != undefined)
								- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", albumID: phrases[i].albumID, customData: {sound: user.Phrases[j].sound}})
							- else
								- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", customData: {sound: user.Phrases[j].sound}})
						- else
							- if(phrases[i].albumID != undefined)
								- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image", albumID: phrases[i].albumID})
							- else
								- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: user.Phrases[j].title, kind: "image"})
				- else
					- if(user.Phrases[j].sound != undefined)
						- if(phrases[i].albumID != undefined)
							- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: phrases[i].title, kind: "image", albumID: phrases[i].albumID, customData: {sound: user.Phrases[j].sound}})
						- else
							- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: phrases[i].title, kind: "image", customData: {sound: user.Phrases[j].sound}})
					- else
						- if(phrases[i].albumID != undefined)
							- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: phrases[i].title, kind: "image", albumID: phrases[i].albumID})
						- else
							- categ.push({srct: phrases[i].srct, ID: phrases[i]._id, title: phrases[i].title, kind: "image" })

	nav
		a#resp-menu.responsive-menu(href='#')
			i.fa.fa-reorder
			|  Menu
		ul.menu
			li.bannerContainer
				a.homer(href='/home')
					i.fa.fa-home
					|  HOME
			if(user.classf == "Speech Therapist")
				li.bannerContainer
					a(href='/users')
						i.fa.fa-users
						|  Users
					ul.sub-menu
						li
							a(href='/addsubuser')
								i.fa.fa-user-plus
								|  Add user
			li.bannerContainer
				a(href='/addphrase')
					i.far.fa-plus-square
					|  Add Phrase
			li.bannerContainer
				a(href='/addcategory')
					i.fa.fa-sitemap
					|  Add Category
			li.bannerContainer
				a(href='#')#btn_edit_mode
					i.far.fa-check-square
					|  Select Tiles
				ul.submenu.editContainer
					li.bannerContainer.twoormore
						a(href='#')#edit-tile
							i.far.fa-edit
							|  Edit Tile
					li.bannerContainer
						a(href='#')#delete-tile
							i.fa.fa-trash
							|  Delete Tiles
			li
				a(href='#')#SNLCK
					i.fa.fa-lock
					|  SN Lock
			li.bannerContainer
				a(href='#')#INFO
					i(style="font-size:20px").far.fa-question-circle
			li.right-items
				a(href='#')=user.name
				ul.sub-menu
					li.bannerContainer
						a(href='/edituser')
							i.far.fa-address-card
							|  Edit User
					li
						a(href='#')#btn-logout
							i.fa.fa-sign-out
							|  Logout
	#my_nanogallery2.images-grid(data-nanogallery2=
	{
		"items": categ,
		"itemsBaseURL": "/users/",
		"locationHash": false,
		"thumbnailWidth": "250",
		"thumbnailHeight": "250",
		"thumbnailBorderVertical": 4,
		"thumbnailBorderHorizontal": 4,
		"colorScheme":
		{
			"thumbnail":
			{
				"background": 'rgba(97, 152, 253, 1)',
				"thumbnailIcon" : { "color": '#FFF'}
			}
		},
		"thumbnailLabel":
		{
			"position": "onBottom",
			"titleFontSize": '1.5em'
		},
		"thumbnailAlignment": "center",
		"thumbnailDisplayTransitionDuration": 0,
		"thumbnailDisplayInterval": 3,
		"thumbnailHoverEffect2": null,
		"thumbnailToolbarImage":      { topLeft: 'select, custom1'},
		"thumbnailToolbarAlbum":      { topLeft: 'select, custom1'},
		"icons":            		  { thumbnailCustomTool1 : '<i style="color:#d6f0fd;font-size:24px" class="fas fa-volume-up"></i>',
										thumbnailSelected: '<i style="color:#d6f0fd;font-size:30px" class="fa fa-check-square-o"></i>',
										thumbnailUnselected: '<i style="color:#d6f0fd;font-size:24px" class="fa fa-square-o"></i>'
		},
		"fnThumbnailToolCustAction":  'myTnTool',
		"thumbnailOpenImage": false })

	include modals/logout
	include modals/deletetile
	include modals/alert
	include modals/info

block scripts
	script(src='/js/views/home.js')
	script(src='/js/controllers/homeController.js')
	script(src='/js/form-validators/accountValidator.js')